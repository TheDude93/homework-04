tweets$text[tweets$lang == "fi"]
tweets$lang[tweets$lang == "fi"] <- c("en")
tweets$text[tweets$lang == "da"]
tweets$lang[tweets$lang == "da"] <- c("en")
View(tweets)
table(tweets$lang)
colours <- c("darkgrey", "cornflowerblue")
ggplot(tweets, aes(x = handle, y = lang, fill = handle))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle[lang], y = lang, fill = handle))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = lang, fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
tweets <- read.csv2(
file = "data/clinton_trump_tweets.csv",
stringsAsFactors = F
)
tweets$text[tweets$lang == "et"]
tweets$text[tweets$lang == "fr"]
tweets$text[tweets$lang == "tl"]
tweets$text[tweets$lang == "fi"]
tweets$text[tweets$lang == "da"]
tweets$lang[tweets$lang == "et"] <- c("en")
tweets$lang[tweets$lang == "fr"] <- c("en")
tweets$lang[tweets$lang == "tl"] <- c("en")
tweets$lang[tweets$lang == "fi"] <- c("en")
tweets$lang[tweets$lang == "da"] <- c("en")
table(tweets$lang)
ggplot(tweets, aes(x = handle, y = lang, fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = lang, fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
?frequency
?count()
ggplot(tweets, aes(x = handle, y = count(tweets, lang), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = count(tweets, lang[handle]), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = count(tweets, lang), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = count(tweets, lang, wt_var = handle), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = count(tweets, vars =lang, wt_var = handle), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = count(tweets, vars ==lang, wt_var == handle), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = count(tweets, lang, handle), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = count(tweets, lang), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "identity", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
tweet_lang <- c(tweets$lang == "en", tweets$lang == "es")
tweet_lang <- tweets[(tweets$lang == "en" & tweets$lang == "es")]
View(tweet_lang)
tweet_lang <- tweets[tweets$lang == "en" & tweets$lang == "es"]
tweet_lang <- tweets[tweets$lang == "en" | tweets$lang == "es"]
tweet_lang <- tweets[(tweets$lang == "en" | tweets$lang == "es")]
tweet_lang <- tweets[(tweets$lang == "en") | (tweets$lang == "es")]
tweet_lang <- c(tweets[tweets$lang == "en" | tweets$lang == "es"])
tweet_lang <- tweets[tweets$lang == "en" | tweets$lang == "es", ]
ggplot(tweets_lang, aes(x = handle, y = count(tweets, lang), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "count", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = count(tweets, lang), fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "count", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = lang, fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "count", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, y = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "count", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
ggplot(tweets, aes(x = handle, fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "count", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language")
rm(tweet_lang)
ggplot(tweets, aes(x = handle, fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "count", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language",
labels=c("English", "Spanish"))
ggplot(tweets, aes(x = handle, fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "count", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language",
labels=c("English", "Spanish"))+
scale_x_discrete(label=c("Hillary Clinton", "Donald Trump"))
table(tweets[tweets$lang == "es"])
table(tweets[tweets$lang == "es"],)
table(tweets[tweets$lang == "es"], )
table( ,tweets[tweets$lang == "es"])
table(tweets[tweets$lang == "es"]),
table((tweets[tweets$lang == "es"]), )
tweets <- read.csv2(
file = "data/clinton_trump_tweets.csv",
stringsAsFactors = F,
fileEncoding = "utf-8"
)
tweets <- read.csv2(
file = "data/clinton_trump_tweets.csv",
stringsAsFactors = F
)
table(tweets$lang)
tweets$text[tweets$lang == "et"]
tweets$text[tweets$lang == "fr"]
tweets$text[tweets$lang == "tl"]
tweets$text[tweets$lang == "fi"]
tweets$text[tweets$lang == "da"]
tweets$lang[tweets$lang == "et"] <- c("en")
tweets$lang[tweets$lang == "fr"] <- c("en")
tweets$lang[tweets$lang == "tl"] <- c("en")
tweets$lang[tweets$lang == "fi"] <- c("en")
tweets$lang[tweets$lang == "da"] <- c("en")
colours <- c("darkgrey", "cornflowerblue")
ggplot(tweets, aes(x = handle, fill = lang))+
xlab(" ") + ylab("Tweet frequency")+
ggtitle("Language of Tweets")+
geom_bar(stat = "count", position = position_dodge())+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name="Language",
labels=c("English", "Spanish"))+
scale_x_discrete(label=c("Hillary Clinton", "Donald Trump"))
tweet
tweets$retweet_count+tweets$favorite_count
new <- tweets[tweets$retweet_count+tweets$favorite_count]
new <- tweets( ,[tweets$retweet_count+tweets$favorite_count])
new <- tweets([tweets$retweet_count+tweets$favorite_count], )
new <- (tweets[tweets$retweet_count+tweets$favorite_count], )
new <- (, tweets[tweets$retweet_count+tweets$favorite_count])
new <- tweets[, tweets$retweet_count+tweets$favorite_count]
new <- tweets(,[tweets$retweet_count+tweets$favorite_count])
new <- tweets(,tweets$retweet_count+tweets$favorite_count)
new <- tweets[(,tweets$retweet_count+tweets$favorite_count)]
new <- tweets[,tweets$retweet_count+tweets$favorite_count]
new <- tweets[ ,(tweets$retweet_count+tweets$favorite_count)]
tweets$sumcol <- tweets$retweet_count + tweets$favorite_count
View(tweets)
give_tweets <- function(candidate = "Donald Trump", number = 20){
if (candidate != "Donald Trump" | candidate != "Hillary Clinton")
print("Rossz nÃ©v, prÃ³bÃ¡ld Ãºjra!")
}else {
}
?order
tweets$sumcol <- tweets$retweet_count + tweets$favorite_count
tweets[order(tweets$sumcol, decreasing = T)]
tweets[order(tweets$sumcol, decreasing = T), ]
tweets <- tweets[order(tweets$sumcol, decreasing = T), ]
View(tweets)
View(tweets)
trump_tweets <- tweets[tweets$handle = "realDonaldTrump", ]
trump_tweets <- tweets[tweets$handle == "realDonaldTrump", ]
trump_tweets <- tweets[order(tweets$sumcol, decreasing = T), ]
trump_tweets <- tweets[tweets$handle == "realDonaldTrump", ]
trump_tweets <- trump_tweets[order(trump_tweets$sumcol, decreasing = T), ]
for(i in 1: number) {
trump_tweets$text[i]
}
give_tweets <- function(candidate = "Donald Trump", number = 20){
if (candidate != "Donald Trump" | candidate != "Hillary Clinton")
print("Rossz nÃ©v, prÃ³bÃ¡ld Ãºjra!")
}else if (candidate = "Donald Trump"){
tweets$sumcol <- tweets$retweet_count + tweets$favorite_count
trump_tweets <- tweets[tweets$handle == "realDonaldTrump", ]
trump_tweets <- trump_tweets[order(trump_tweets$sumcol, decreasing = T), ]
for(i in 1: number) {
trump_tweets$text[i]
}
}
print(trump_tweets[1:number, trump_tweets$text])
print(trump_tweets[1:10, trump_tweets$text])
print(trump_tweets[1:10, ])
View(trump_tweets)
print(trump_tweets[1:10, "text"])
give_tweets <- function(candidate = "Donald Trump", number = 20){
if (candidate = "Donald Trump"){
tweets$sumcol <- tweets$retweet_count + tweets$favorite_count
trump_tweets <- tweets[tweets$handle == "realDonaldTrump", ]
trump_tweets <- trump_tweets[order(trump_tweets$sumcol, decreasing = T), ]
print(trump_tweets[1:number, "text"])
} else if (candidate = "Hillary Clinton"){
hillary_tweets <- tweets[tweets$handle == "HillaryClinton", ]
hillary_tweets <- hillary_tweets[order(hillary_tweets$sumcol, decreasing = T), ]
print(hillary_tweets[1:number, "text"])
} else {
print("Rossz nÃ©v, prÃ³bÃ¡ld Ãºjra!")
}
}
give_tweets <- function(candidate == "Donald Trump", number == 20){
if (candidate = "Donald Trump"){
tweets$sumcol <- tweets$retweet_count + tweets$favorite_count
trump_tweets <- tweets[tweets$handle == "realDonaldTrump", ]
trump_tweets <- trump_tweets[order(trump_tweets$sumcol, decreasing = T), ]
print(trump_tweets[1:number, "text"])
} else if (candidate = "Hillary Clinton"){
hillary_tweets <- tweets[tweets$handle == "HillaryClinton", ]
hillary_tweets <- hillary_tweets[order(hillary_tweets$sumcol, decreasing = T), ]
print(hillary_tweets[1:number, "text"])
} else {
print("Rossz nÃ©v, prÃ³bÃ¡ld Ãºjra!")
}
}
give_tweets <- function(candidate = "Donald Trump", number == 20){
if (candidate = "Donald Trump"){
tweets$sumcol <- tweets$retweet_count + tweets$favorite_count
trump_tweets <- tweets[tweets$handle == "realDonaldTrump", ]
trump_tweets <- trump_tweets[order(trump_tweets$sumcol, decreasing = T), ]
print(trump_tweets[1:number, "text"])
} else if (candidate = "Hillary Clinton"){
hillary_tweets <- tweets[tweets$handle == "HillaryClinton", ]
hillary_tweets <- hillary_tweets[order(hillary_tweets$sumcol, decreasing = T), ]
print(hillary_tweets[1:number, "text"])
} else {
print("Rossz nÃ©v, prÃ³bÃ¡ld Ãºjra!")
}
}
give_tweets <- function(candidate = "Donald Trump", number = 20){
if (candidate = "Donald Trump"){
tweets$sumcol <- tweets$retweet_count + tweets$favorite_count
trump_tweets <- tweets[tweets$handle == "realDonaldTrump", ]
trump_tweets <- trump_tweets[order(trump_tweets$sumcol, decreasing = T), ]
print(trump_tweets[1:number, "text"])
} else if (candidate = "Hillary Clinton"){
hillary_tweets <- tweets[tweets$handle == "HillaryClinton", ]
hillary_tweets <- hillary_tweets[order(hillary_tweets$sumcol, decreasing = T), ]
print(hillary_tweets[1:number, "text"])
} else {
print("Rossz nÃ©v, prÃ³bÃ¡ld Ãºjra!")
}
}
give_tweets <- function(candidate = "Donald Trump", number = 20){
if (candidate == "Donald Trump"){
tweets$sumcol <- tweets$retweet_count + tweets$favorite_count
trump_tweets <- tweets[tweets$handle == "realDonaldTrump", ]
trump_tweets <- trump_tweets[order(trump_tweets$sumcol, decreasing = T), ]
print(trump_tweets[1:number, "text"])
} else if (candidate == "Hillary Clinton"){
hillary_tweets <- tweets[tweets$handle == "HillaryClinton", ]
hillary_tweets <- hillary_tweets[order(hillary_tweets$sumcol, decreasing = T), ]
print(hillary_tweets[1:number, "text"])
} else {
print("Rossz nÃ©v, prÃ³bÃ¡ld Ãºjra!")
}
}
give_tweets()
give_tweets("Hillary Clinton", 10)
give_tweets("Donald Trump", 15)
source("src/homework-04-functions.R")
source("src/homework-04-functions.R")
source("src/homework-04-functions.R")
give_tweets("Hillary Clinton", 10)
give_tweets("Donald Trump", 15)
source("src/homework-04-functions.R")
library(fivethirtyeight)
data("hiphop_cand_lyrics")
View(hiphop_cand_lyrics)
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name= element_blank(),
labels=c("Trump", "Clinton", "Bush", "Christie","Huckabee", "Sanders", "Carson", "Cruz"))
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
scale_fill_manual(values=colours,
name= element_blank()
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_point(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "identity")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, y = candidate, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "identity")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank())+
legend.position="top",
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
legend.position="top",
legend.title = element_blank()
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
legend.position="top",
legend.title = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
legend.position="top",
legend.title = element_blank())
ggplot(hiphop_cand_lyrics, aes(x = album_release_date, fill = candidate))+
xlab(" ") + ylab(" ")+
ggtitle("Every mention of 2016 primary candidates in hip-hop songs")+
geom_bar(stat = "count")+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
legend.position="top",
legend.title = element_blank())+
scale_fill_manual(labels=c("Trump", "Clinton", "Bush", "Christine", "Huckabee", "Sanders", "Carson", "Cruz"))
ggplot(hiphop_cand_lyrics,
aes(x = album_release_date, fill = candidate)) +
xlab(" ") + ylab(" ") +
ggtitle("Every mention of 2016 primary candidates in hip-hop songs") +
geom_bar(stat = "count") +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
legend.position = "top",
legend.title = element_blank()
) +
scale_fill_manual(
labels = c(
"Trump",
"Clinton",
"Bush",
"Christine",
"Huckabee",
"Sanders",
"Carson",
"Cruz"
)
)
ggplot(hiphop_cand_lyrics,
aes(x = album_release_date, fill = candidate)) +
xlab(" ") + ylab(" ") +
ggtitle("Every mention of 2016 primary candidates in hip-hop songs") +
geom_bar(stat = "count") +
theme(
plot.title = element_text(hjust = 0.5),
panel.background = element_blank(),
legend.position = "top",
legend.title = element_blank()
)
